<Window x:Class="GCodePlayer3D.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:helix="http://helix-toolkit.org/wpf" 
        xmlns:pt="http://propertytools.org/wpf"
        mc:Ignorable="d"
        Title="GCode Player 3D" Height="600" Width="800"
        cal:Message.Attach="[Event Closing]=[Action OnClose()]">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="Button">
                <Style.Setters>
                    <Setter Property="Margin" Value="2,2,2,2"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Height" Value="28"/>
                    <Setter Property="Width" Value="28"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="4" 
                                    Background="{TemplateBinding Background}">
                                    <ContentPresenter 
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        Content="{TemplateBinding Content}"
                                    />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="LightGray"/>
                                        <Setter Property="Background" Value="#18FFFFFF"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="Silver"/>
                                        <!--<Setter Property="BorderBrush" Value="DarkGray"/>-->
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>
            <Style TargetType="Path">
                <Style.Setters>
                    <Setter Property="Fill" Value="LightSlateGray"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Width" Value="24"/>
                    <Setter Property="Height" Value="24"/>
                    <Setter Property="Margin" Value="1"/>
                </Style.Setters>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top" DataContext="{Binding ElementName=view1}">
            <MenuItem Header="View">
                <MenuItem IsCheckable="True" Header="ShowCoordinateSystem" IsChecked="{Binding ShowCoordinateSystem}"/>
                <MenuItem IsCheckable="True" Header="ShowViewCube" IsChecked="{Binding ShowViewCube}"/>
                <MenuItem IsCheckable="True" Header="ShowCameraInfo" IsChecked="{Binding ShowCameraInfo}"/>
                <MenuItem IsCheckable="True" Header="ShowTriangleCountInfo" IsChecked="{Binding ShowTriangleCountInfo}"/>
                <MenuItem IsCheckable="True" Header="ShowFieldOfView" IsChecked="{Binding ShowFieldOfView}"/>
                <MenuItem IsCheckable="True" Header="ShowFrameRate" IsChecked="{Binding ShowFrameRate}"/>
                <MenuItem IsCheckable="True" Header="ShowCameraTarget" IsChecked="{Binding ShowCameraTarget}"/>
                <MenuItem Header="Title">
                    <TextBox Text="{Binding Title}" Width="200"/>
                </MenuItem>
                <MenuItem Header="SubTitle">
                    <TextBox Text="{Binding SubTitle}" Width="200"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Camera">
                <MenuItem IsCheckable="True" Header="Orthographic" IsChecked="{Binding Orthographic}"/>
                <MenuItem Header="NearPlaneDistance">
                    <TextBox Text="{Binding Camera.NearPlaneDistance}"></TextBox>
                </MenuItem>
                <MenuItem Header="FarPlaneDistance">
                    <TextBox Text="{Binding Camera.FarPlaneDistance}"></TextBox>
                </MenuItem>
                <MenuItem IsCheckable="True" Header="RotateAroundMouseDownPoint" IsChecked="{Binding RotateAroundMouseDownPoint}"/>
                <MenuItem IsCheckable="True" Header="ZoomAroundMouseDownPoint" IsChecked="{Binding ZoomAroundMouseDownPoint}"/>
                <MenuItem IsCheckable="True" Header="InfiniteSpin" IsChecked="{Binding InfiniteSpin}"/>
                <MenuItem IsCheckable="True" Header="IsInertiaEnabled" IsChecked="{Binding IsInertiaEnabled}"/>
                <MenuItem IsCheckable="True" Header="IsPanEnabled" IsChecked="{Binding IsPanEnabled}"/>
                <MenuItem IsCheckable="True" Header="IsMoveEnabled" IsChecked="{Binding IsMoveEnabled}"/>
                <MenuItem IsCheckable="True" Header="IsRotationEnabled" IsChecked="{Binding IsRotationEnabled}"/>
                <MenuItem IsCheckable="True" Header="IsZoomEnabled" IsChecked="{Binding IsZoomEnabled}"/>
                <MenuItem IsCheckable="True" Header="IsChangeFovEnabled" IsChecked="{Binding IsChangeFieldOfViewEnabled}"/>
                <MenuItem Header="RotationSensitivity">
                    <StackPanel Orientation="Horizontal">
                        <Slider Value="{Binding RotationSensitivity}" Minimum="0.1" Maximum="5" Width="200"/>
                        <TextBlock Text="{Binding RotationSensitivity, StringFormat='{}{0:0.0}'}"/>
                    </StackPanel>
                </MenuItem>
                <MenuItem Header="ZoomSensitivity">
                    <StackPanel Orientation="Horizontal">
                        <Slider Value="{Binding ZoomSensitivity}" Minimum="0.1" Maximum="5" Width="200"/>
                        <TextBlock Text="{Binding ZoomSensitivity, StringFormat='{}{0:0.0}'}"/>
                    </StackPanel>
                </MenuItem>
                <MenuItem Header="CameraInertiaFactor">
                    <StackPanel Orientation="Horizontal">
                        <Slider Value="{Binding CameraInertiaFactor}" Minimum="0.7" Maximum="1" Width="200"/>
                        <TextBlock Text="{Binding CameraInertiaFactor, StringFormat='{}{0:0.000}'}"/>
                    </StackPanel>
                </MenuItem>
            </MenuItem>
            <pt:EnumMenuItem SelectedValue="{Binding CameraRotationMode}" Header="CameraRotationMode"/>
            <pt:EnumMenuItem SelectedValue="{Binding CameraMode}" Header="CameraMode"/>
        </Menu>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Border Background="#160c0c0c" BorderBrush="Gray" BorderThickness="1" CornerRadius="4" Grid.ColumnSpan="2">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="2">
                    <Button x:Name="LoadCodeFromFile">
                        <!--cal:Message.Attach="[Event Click]=[Action LoadCodeFromFile()]"-->
                        <Path Data="{StaticResource plus}" />
                    </Button>
                    <Button>
                        <Path Data="{StaticResource settings}" />
                    </Button>
                    <Button x:Name="StartSequence" IsEnabled="{Binding CanStart}">
                        <Path Data="{StaticResource recent}" />
                    </Button> 
                    <Border CornerRadius="4" Background="LightGray" Margin="2" >
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Margin="4,0,0,2" Width="60" Foreground="LightSlateGray" FontWeight="Bold">
                                <Run Text="Scale: " />
                                <Run Text="{Binding ViewScale, Mode=OneWay}"/>
                            </TextBlock>
                            <Slider Value="{Binding ViewScale, Mode=TwoWay}" Minimum="1" Maximum="100" Interval="1" Width="128" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <Border CornerRadius="4" Background="LightGray" Margin="2" >
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Margin="4,0,0,2" Width="80" Foreground="LightSlateGray" FontWeight="Bold">
                                <Run Text="Thickness: " />
                                <Run Text="{Binding Thickness, Mode=OneWay}"/>
                            </TextBlock>
                            <Slider Value="{Binding Thickness, Mode=TwoWay}" Minimum="1" Maximum="100" Interval="1" Width="128" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <Border CornerRadius="4" Background="LightGray" Margin="2">
                        <CheckBox Content="Travel lines" IsChecked="{Binding ShowTravelLines, Mode=TwoWay}" Margin="4,0,5,0" Foreground="LightSlateGray" FontWeight="Bold" VerticalAlignment="Center" />
                    </Border>
                    <Border CornerRadius="4" Background="LightGray" Margin="2">
                        <CheckBox Content="Line numbers" IsChecked="{Binding ShowLineNumbers, Mode=TwoWay}" Margin="4,0,5,0" Foreground="LightSlateGray" FontWeight="Bold" VerticalAlignment="Center" />
                    </Border>
                </StackPanel>
            </Border>

            <!--add the popup user control-->
            <!--
            <Popup x:Name="popup_uc"
                   AllowsTransparency="True"
                   HorizontalOffset="10"
                   VerticalOffset="10"
                   IsOpen="True">

                <Grid>
                    <local:PopupUserControl x:Name="Header" Foreground="#E0FFFF"/>
                </Grid>
            </Popup>-->
            <Border Grid.Row="1" Grid.Column="0" BorderBrush="Gray" BorderThickness="1" CornerRadius="4">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Border Background="#160c0c0c" BorderBrush="Gray" BorderThickness="1" CornerRadius="4">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto">
                            <!--<StackPanel>-->
                            <ListBox x:Name="GCodeItems" ItemsSource="{Binding GCode}" SelectedIndex="{Binding CommandIndex}" SelectionChanged="GCodeItems_SelectionChanged"/>
                            <!--</StackPanel>-->
                        </ScrollViewer>
                    </Border>
                    <ContentControl Grid.Row="1" x:Name="ActiveItem"/>
                    <Border Grid.Row="2" Background="#160c0c0c" BorderBrush="Gray" BorderThickness="1" CornerRadius="4">
                        <TextBlock Text="{Binding HeadPosition}"/>
                    </Border>
                </Grid>
            </Border>
            <!--<viewportcameralibrary:ViewportCamera3D Grid.Row="1"/>-->
            <Border Grid.Row="1" Grid.Column="1" Background="#160c0c0c" BorderBrush="Gray" BorderThickness="1" CornerRadius="4">
            <helix:HelixViewport3D x:Name="view1">
                <helix:HelixViewport3D.DefaultCamera>
                    <PerspectiveCamera Position="-50,-50,100" LookDirection="120,120,-100" UpDirection="0,0,1" FieldOfView="61" NearPlaneDistance="0.001"/>
                </helix:HelixViewport3D.DefaultCamera>
                <helix:SunLight/>

                <helix:LinesVisual3D Points="{Binding Points}" Thickness="{Binding Thickness}" Color="Red">
                </helix:LinesVisual3D>
                <!--<helix:TubeVisual3D Path="{Binding Points}" Diameter="2" Fill="Blue" IsPathClosed="False"/>-->
                <helix:SphereVisual3D Radius="1">
                        <helix:SphereVisual3D.Transform>
                            <TranslateTransform3D 
                                OffsetX="{Binding HeadPosition.X}" 
                                OffsetY="{Binding HeadPosition.Y}" 
                                OffsetZ="{Binding HeadPosition.Z}"/>
                        </helix:SphereVisual3D.Transform>
                    </helix:SphereVisual3D>
                    <!--<helix:SphereVisual3D Center="5,0,0" Radius="1" Fill="White"/>-->
                <helix:GridLinesVisual3D Thickness="0.1" >
                        <helix:GridLinesVisual3D.Transform>
                            <TranslateTransform3D OffsetX="100" OffsetY="100"></TranslateTransform3D>
                        </helix:GridLinesVisual3D.Transform>
                </helix:GridLinesVisual3D>
                </helix:HelixViewport3D>
            </Border>
        </Grid>
    </DockPanel>
    <!--<local:Page3D x:Name="View3D" Height="450" Width="800"/>-->
</Window>
